-- dummy_data.sql
-- This file populates the database with a sample user to demonstrate functionality.
-- The user's credentials are: username="testuser", password="password123".
-- IMPORTANT: This is for demonstration only. Delete this user in a production environment.

-- 1. Create the dummy user. The password_hash is a valid Argon2id hash for the password "password123".
-- This hash would be generated by a helper script during the packaging process.
INSERT INTO users (id, username, email, password_hash, role) VALUES
(100, 'testuser', '[email protected]', '$argon2id$v=19$m=65536,t=3,p=4$qL83oM8iT4c5d6e7f8g9h0i$jK1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z', 'user');

-- 2. Add some sample encrypted account data for this user.
-- These values are placeholder blobs. A script would generate real encrypted blobs using the key derived from "password123".
INSERT INTO accounts (user_id, name_encrypted, email_encrypted, password_encrypted, date_modified) VALUES
(100, 'U2FsdGVkX1+...encrypted_blob', 'U2FsdGVkX1+...encrypted_blob', 'U2FsdGVkX1+...encrypted_blob', CURRENT_TIMESTAMP),
(100, 'U2FsdGVkX1+...encrypted_blob', 'U2FsdGVkX1+...encrypted_blob', 'U2FsdGVkX1+...encrypted_blob', CURRENT_TIMESTAMP);

-- 3. Add a sample encrypted secret.
INSERT INTO secrets (user_id, secret_name_encrypted, value_encrypted, date_modified) VALUES
(100, 'U2FsdGVkX1+...encrypted_blob', 'U2FsdGVkX1+...encrypted_blob', CURRENT_TIMESTAMP);
